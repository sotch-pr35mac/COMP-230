Computer Organization (CS230) Notes Part 3

Test Cases:
	verifyMIPSInstruction
		empty line
		line too long
		line too short
		line with one character
		line with only 31 characters
		0 and a 1 in the first position, and last position in valid string
		Also need to test for invalid characters
		If you are going to have to test for invalid characters, you have to test in a valid 32 bit string	
	binToDec
		begin and end
		The documentation said that we should check to see if begin is greater than end
		begin is less than 0 and greater than 31
		also check to see if begin is equal to end

Negative Numbers
	Sign and Magnitude
		<code lang="text/binary">
			10101010
		</code>
		-In sign and magnitude the first bit would be the sign, and the rest would be the magnitude or value of the string
		We can have 2^8 different numbers
		unsgined: 0 ... (2^8 - 1)
		signed: -(2^7 -1) ... 0 ... (2^7 - 1)
		This means that you can have a negative 0, and then you can have positive 0, and these two are NOT EQUIVALENT
		This also makes thing pretty hard to do arithmatic
		What is 1 - 2? (in your own opinion), well, so, like when you add these two together using this method, we get -3. That makes me feel really uncomfortable and a little bit violated.
	1's complement
		You just flip every 0 to a 1 and every 1 to a zero, and then that number is the negative representation. 
		dec1 = bin00001
		dec-1 = bin11110
		This doesn't work too well because we will still have a negative 0 representation in this system and then it becomes a problem again.
		This is not really an okay thing, so 2's compliment has to be the best option out of the 3.
	2's complement
		With this there is no representation for negative zero, which makes arithmatic much easier.
		So we do still have a sign bit here, but the rest of the numbers are NOT the magnitude
		-Calculation of 2's compliment:
			1. First you want to take your binary number that you want to represent as a negative value and calculate the 1's compliment of it. 
			2. Then you want to add 1 to the 1's compliment of the number in a negative representation
			3. Now you have the 2's compliment, which is hands down the best compliment.
